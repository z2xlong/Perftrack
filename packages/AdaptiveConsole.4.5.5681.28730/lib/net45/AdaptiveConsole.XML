<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AdaptiveConsole</name>
    </assembly>
    <members>
        <member name="T:AdaptiveConsole.ArgumentCategory">
            <summary>
            Console application argument categories.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ArgumentCategory.Option">
            <summary>
            Indicates that the argument is an option.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ArgumentCategory.Parameter">
            <summary>
            Indicates that the argument is a parameter.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.ArgumentInfo">
            <summary>
            The object which holds the command line argument and its argument type.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.ArgumentInfo.#ctor(System.String,AdaptiveConsole.ArgumentCategory)">
            <summary>
            Parameterized constructor for building the object instance with
            specified parameters.
            </summary>
            <param name="argument">The command line argument.</param>
            <param name="type">The argument type.</param>
        </member>
        <member name="M:AdaptiveConsole.ArgumentInfo.ToString">
            <summary>
            Gets the string identifier of the object.
            </summary>
            <returns>The string identifier.</returns>
        </member>
        <member name="P:AdaptiveConsole.ArgumentInfo.Argument">
            <summary>
            The command line argument.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ArgumentInfo.Category">
            <summary>
            The argument type.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.IListArgumentInfoGenericExtender">
            <summary>
            The extension methods holder for IList&lt;ArgumentInfo&gt; generic type.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.IListArgumentInfoGenericExtender.HasParameterArgument(System.Collections.Generic.IList{AdaptiveConsole.ArgumentInfo})">
            <summary>
            Checks if the argument list contains the arguments which are of Parameter type.
            </summary>
            <param name="args">The argument list to check.</param>
            <returns>True if the argument list contains the argument which are of Parameter type.
            Otherwise false.</returns>
        </member>
        <member name="M:AdaptiveConsole.IListArgumentInfoGenericExtender.ToArgumentString(System.Collections.Generic.IList{AdaptiveConsole.ArgumentInfo})">
            <summary>
            Converts the argument list to the command-line-like argument string (Each argument
            element is separated by the space character).
            </summary>
            <param name="args">The list of arguments to be converted.</param>
            <returns>The command-line-like argument string.</returns>
        </member>
        <member name="T:AdaptiveConsole.ArgumentMissingException">
            <summary>
            The AdaptiveConsole exception which indicates that the argument is a required argument
            but cannot find the corresponding command line argument.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.AdaptiveConsoleException">
            <summary>
            The base exception class for all AdaptiveConsole exceptions.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.AdaptiveConsoleException.GENERAL_EXCEPTION_MESSAGE">
            <summary>
            Gets the general exception message.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.AdaptiveConsoleException.#ctor(System.String)">
            <summary>
            Initializes the exception with the given message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:AdaptiveConsole.AdaptiveConsoleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes the exception with the given message and its inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="M:AdaptiveConsole.AdaptiveConsoleException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes the exception with the formatting string and the parameters.
            </summary>
            <param name="format">The formatting string.</param>
            <param name="arguments">Parameters.</param>
        </member>
        <member name="M:AdaptiveConsole.ArgumentMissingException.#ctor(System.String)">
            <summary>
            Initializes the exception with the given message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:AdaptiveConsole.ArgumentMissingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes the exception with the given message and its inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="M:AdaptiveConsole.ArgumentMissingException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes the exception with the formatting string and the parameters.
            </summary>
            <param name="format">The formatting string.</param>
            <param name="arguments">Parameters.</param>
        </member>
        <member name="T:AdaptiveConsole.Config.AdaptiveConsoleConfiguration">
            <summary>
            The AdaptiveConsoleConfiguration Configuration Section.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.AdaptiveConsoleConfigurationSectionName">
            <summary>
            The XML name of the AdaptiveConsoleConfiguration Configuration Section.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.AdaptiveConsoleConfigurationSectionPath">
            <summary>
            The XML path of the AdaptiveConsoleConfiguration Configuration Section.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.XmlnsPropertyName">
            <summary>
            The XML name of the <see cref="P:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.Xmlns"/> property.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.ProviderPropertyName">
            <summary>
            The XML name of the <see cref="P:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.Provider"/> property.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.RepositoriesPropertyName">
            <summary>
            The XML name of the <see cref="P:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.Repositories"/> property.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.IsReadOnly">
            <summary>
            Gets a value indicating whether the element is read-only.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.Instance">
            <summary>
            Gets the AdaptiveConsoleConfiguration instance.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.Xmlns">
            <summary>
            Gets the XML namespace of this Configuration Section.
            </summary>
            <remarks>
            This property makes sure that if the configuration file contains the XML namespace,
            the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
            </remarks>
        </member>
        <member name="P:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.Provider">
            <summary>
            Gets or sets gets or sets the name of the type which represents the console application instance.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.Config.AdaptiveConsoleConfiguration.Repositories">
            <summary>
            Gets or sets the Repositories.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.Config.ContractRepositoryElementCollection">
            <summary>
            A collection of ContractRepositoryElement instances.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.Config.ContractRepositoryElementCollection.ContractRepositoryElementPropertyName">
            <summary>
            The XML name of the individual <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> instances in this collection.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.Config.ContractRepositoryElementCollection.IsElementName(System.String)">
            <summary>
            Indicates whether the specified <see cref="T:System.Configuration.ConfigurationElement"/> exists in the <see cref="T:System.Configuration.ConfigurationElementCollection"/>.
            </summary>
            <param name="elementName">The name of the element to verify.</param>
            <returns>
            <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:AdaptiveConsole.Config.ContractRepositoryElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for the specified configuration element.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:AdaptiveConsole.Config.ContractRepositoryElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/>.
            </summary>
            <returns>
            A new <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/>.
            </returns>
        </member>
        <member name="M:AdaptiveConsole.Config.ContractRepositoryElementCollection.Add(AdaptiveConsole.Config.ContractRepositoryElement)">
            <summary>
            Adds the specified <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> to the <see cref="T:System.Configuration.ConfigurationElementCollection"/>.
            </summary>
            <param name="repository">The <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> to add.</param>
        </member>
        <member name="M:AdaptiveConsole.Config.ContractRepositoryElementCollection.Remove(AdaptiveConsole.Config.ContractRepositoryElement)">
            <summary>
            Removes the specified <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> from the <see cref="T:System.Configuration.ConfigurationElementCollection"/>.
            </summary>
            <param name="repository">The <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> to remove.</param>
        </member>
        <member name="M:AdaptiveConsole.Config.ContractRepositoryElementCollection.GetItemAt(System.Int32)">
            <summary>
            Gets the <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> at the specified index.
            </summary>
            <param name="index">The index of the <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> to retrieve.</param>
        </member>
        <member name="M:AdaptiveConsole.Config.ContractRepositoryElementCollection.GetItemByKey(System.String)">
            <summary>
            Gets the <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> with the specified key.
            </summary>
            <param name="name">The key of the <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> to retrieve.</param>
        </member>
        <member name="M:AdaptiveConsole.Config.ContractRepositoryElementCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the element is read-only.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.Config.ContractRepositoryElementCollection.CollectionType">
            <summary>
            Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection"/>.
            </summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        </member>
        <member name="P:AdaptiveConsole.Config.ContractRepositoryElementCollection.ElementName">
            <summary>
            Gets the name used to identify this collection of elements
            </summary>
        </member>
        <member name="P:AdaptiveConsole.Config.ContractRepositoryElementCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> at the specified index.
            </summary>
            <param name="index">The index of the <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> to retrieve.</param>
        </member>
        <member name="P:AdaptiveConsole.Config.ContractRepositoryElementCollection.Item(System.Object)">
            <summary>
            Gets the <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> with the specified key.
            </summary>
            <param name="name">The key of the <see cref="T:AdaptiveConsole.Config.ContractRepositoryElement"/> to retrieve.</param>
        </member>
        <member name="T:AdaptiveConsole.Config.ContractRepositoryElement">
            <summary>
            The ContractRepositoryElement Configuration Element.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.Config.ContractRepositoryElement.NamePropertyName">
            <summary>
            The XML name of the <see cref="P:AdaptiveConsole.Config.ContractRepositoryElement.Name"/> property.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.Config.ContractRepositoryElement.AssemblyPropertyName">
            <summary>
            The XML name of the <see cref="P:AdaptiveConsole.Config.ContractRepositoryElement.Assembly"/> property.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.Config.ContractRepositoryElement.IsReadOnly">
            <summary>
            Gets a value indicating whether the element is read-only.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.Config.ContractRepositoryElement.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.Config.ContractRepositoryElement.Assembly">
            <summary>
            Gets or sets the Assembly.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.ConsoleApplicationBase">
            <summary>
            The base class for all console applications which use AdaptiveConsole framework.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.OPTION_CONTRACT_ARGUMENT_SEP">
            <summary>
            The separator character which is used for separating the arguments that are defined on the option contracts.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.OPTION_ATTRIBUTE_NAME_SEP">
            <summary>
            The separater character which is used for separating the arguments that are defined on the option names.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.TEMPLATE_ASSEMBLY_VERSION">
            <summary>
            The template for assembly version.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.TEMPLATE_ASSEMBLY_TITLE">
            <summary>
            The template for assembly title.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.TEMPLATE_ASSEMBLY_DESCRIPTION">
            <summary>
            The template for assembly description.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.TEMPLATE_ASSEMBLY_PRODUCT">
            <summary>
            The template for assembly product information.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.TEMPLATE_ASSEMBLY_COPYRIGHT">
            <summary>
            The template for assembly copyright information.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.TEMPLATE_ASSEMBLY_COMPANY">
            <summary>
            The template for assembly company information.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.TEMPLATE_APPLICATION_LOGO">
            <summary>
            The template for the replacement of application logo.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.TEMPLATE_APPLICATION_DESCRIPTION">
            <summary>
            The template for the replacement of application description.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.TEMPLATE_APPLICATION_SYNTAX_LINES">
            <summary>
            The template for the replacement of application syntax lines.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.TEMPLATE_APPLICATION_SYNTAX_DESCRIPTIONS">
            <summary>
            The template for the replacement of application syntax description.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.OPTION_NAME_VALUE_SEP">
            <summary>
            The separater charater which is used for separating the values within the ValueList argument.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.CONFIG_SECTION_NAME">
            <summary>
            Represents the name of the configuration section.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ConsoleApplicationBase.entryAssembly">
            <summary>
            The entry assembly of the console application.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.ContainsOption(System.String,System.String,System.Boolean,System.Char)">
            <summary>
            Checks if the name of an option contains the specified argument.
            </summary>
            <param name="name">Name of the option.</param>
            <param name="argument">The argument to be checked.</param>
            <param name="caseSensitive">Indicates whether should perform a case-sensitive check.</param>
            <param name="sep">The separator for the elements in the name.</param>
            <returns>True if the specified argument is within the option name, otherwise false.</returns>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.GetSingleValue(System.String,System.String@,System.String@,System.Char)">
            <summary>
            Gets the option name and value from a SingleValue option.
            </summary>
            <param name="argument">The command line argument from which the option name and value should be retrieved.</param>
            <param name="optionName">Name of the option.</param>
            <param name="optionValue">Value of the option</param>
            <param name="sep">The separator for the command line argument.</param>
            <returns>True if successfully get the name and value, otherwise false.</returns>
            <example>
            For example, when dealing with the argument "/output:a.xml", the option name might be "/output" and
            the option value might be "a.xml".
            </example>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.GetMultipleValues(System.String,System.String@,System.String[]@,System.Char,System.Char)">
            <summary>
            Gets the option name and a list of values from a ValueList option.
            </summary>
            <param name="argument">The command line argument from which the option name and values should be retrieved.</param>
            <param name="optionName">Name of the option.</param>
            <param name="optionValues">Values of the option</param>
            <param name="sep">The separator for the command line argument.</param>
            <param name="valueSep">The separator for the values.</param>
            <returns>True if successfully get the name and values, otherwise false.</returns>
            <example>
            For example, when dealing with the argument "/input:a.xsd,b.xsd,c.xsd", the option name might be "/input" and
            the option values are "a.xsd", "b.xsd", "c.xsd".
            </example>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.TraverseOptions(AdaptiveConsole.OptionContractBase,AdaptiveConsole.ConsoleApplicationBase.OptionTraversalEventHandler)">
            <summary>
            Traverses through each option within an option contract and performs specific operation.
            </summary>
            <param name="optionContract">The option contract to be traversed.</param>
            <param name="handler">The operation which should be taken on the option.</param>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.PopulateContractOption(AdaptiveConsole.OptionContractBase,System.Reflection.PropertyInfo,AdaptiveConsole.OptionAttribute)">
            <summary>
            Populates the property of a patternized contract with the values which come from the 
            command line argument.
            </summary>
            <param name="target">The instance of an option contract to be populated.</param>
            <param name="property">The reflection information of the property to which the value should be populated.</param>
            <param name="attribute">The option attribute on the property.</param>
            <exception cref="T:AdaptiveConsole.ArgumentMissingException">Throws when an option is a required option but it is not specified in the command line arguments.</exception>
            <exception cref="T:AdaptiveConsole.InvalidOptionException">Throws when an invalid option type is provided.</exception>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.MatchContract(AdaptiveConsole.OptionContractInfo)">
            <summary>
            Checks if the command line argument matches the given contract.
            </summary>
            <param name="optionContractInfo">The contract information to be matched.</param>
            <returns>True if matches, otherwise false.</returns>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.ValidateOptionContracts">
            <summary>
            Validates the option contracts.
            </summary>
            <exception cref="T:AdaptiveConsole.InvalidContractException">
            Throws when:
            1. The option contract is an Exact contract but with no argument specified.
            2. The Exact contract with the given argument already exists.
            3. The contract repository has registered more than one None contract.
            4. The contract repository has registered more than one Free contract.
            5. The contract repository has registered both Free and Patternized contracts.
            </exception>
            <exception cref="T:AdaptiveConsole.InvalidOptionException">
            Throws when:
            1. The option has not the name been specified.
            2. The option with specific name already exists.
            3. The option is a Swith option but the corresponding property is not a System.Boolean property.
            4. The option is a SingleValue option but the corresponding property is not a System.String property.
            5. The option is a ValueList option but the corresponding property is not a System.Array property.
            </exception>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.GenerateSyntaxLines">
            <summary>
            Generates the syntax lines from each contract defined.
            </summary>
            <returns>The syntax lines represented by the returned string.</returns>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.GenerateSyntaxDescriptions">
            <summary>
            Generates the syntax descriptions from each contract defined.
            </summary>
            <returns>The syntax descriptions represented by the returned string.</returns>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.GetReplacedString(System.String)">
            <summary>
            Gets a replaced string according to the given template.
            </summary>
            <param name="template">The template in which the macros need to be replaced.</param>
            <returns>The replaced string.</returns>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:AdaptiveConsole.ConsoleApplicationBase"/> class.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.#ctor(AdaptiveConsole.Config.AdaptiveConsoleConfiguration,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:AdaptiveConsole.ConsoleApplicationBase"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.Init">
            <summary>
            Initializes the console application.
            </summary>
            <exception cref="T:AdaptiveConsole.AdaptiveConsoleException">Throws when failed to initialize the application.</exception>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.Run">
            <summary>
            Runs the console application.
            </summary>
            <exception cref="T:AdaptiveConsole.AdaptiveConsoleException">Throws when failed to run the application.</exception>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.Done">
            <summary>
            Finalizes the console application.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.PrintBanner">
            <summary>
            Prints the Logo and description to the screen.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.PrintHelpBody">
            <summary>
            Prints the body of the help screen.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationBase.PrintHelpMessage">
            <summary>
            Prints the help message.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.OptionContractRepository">
            <summary>
            Gets or sets the option contract repository. Each contract information contains a instance of
            the option contract and its attribute information.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.AssemblyVersion">
            <summary>
            Gets the version of the assembly.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.AssemblyTitle">
            <summary>
            Gets the title of the assembly.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.AssemblyDescription">
            <summary>
            Gets the description of the assembly.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.AssemblyProduct">
            <summary>
            Gets the product information of the assembly.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.AssemblyCopyright">
            <summary>
            Gets the copyright information of the assembly.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.AssemblyCompany">
            <summary>
            Gets the company information of the assembly.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.Arguments">
            <summary>
            Gets or sets the list of command line argument information. Each element
            contains the information about the command line argument and its argument type.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.AdaptiveConsoleConfig">
            <summary>
            Gets or sets the configuration handler for the AdaptiveConsole framework.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.BannerTemplate">
            <summary>
            Gets the template string which defines the banner format of the help screen.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.HelpBodyTemplate">
            <summary>
            Gets the template string which defines the body format of the help screen.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.Logo">
            <summary>
            Gets or sets the Logo of the console application.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.Description">
            <summary>
            Gets or sets the description text of the console application.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.ApplicationFullName">
            <summary>
            Gets the full file name of the console application.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.ConsoleApplicationBase.ApplicationName">
            <summary>
            Gets the file name of the console application.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.ConsoleApplicationBase.OptionTraversalEventHandler">
            <summary>
            Refers to the methods that takes the option contract, contract property information and
            option information as parameters, and has no return values.
            </summary>
            <param name="target">The option contract which holds the property.</param>
            <param name="property">The reflection information of the property.</param>
            <param name="attribute">The option attribute which describes the property.</param>
        </member>
        <member name="T:AdaptiveConsole.ConsoleApplicationManager">
            <summary>
            Console application manager which manages the creating and running of a console application.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationManager.GetApplication(System.String[])">
            <summary>
            Gets the instance of the console application by its type definition in the configuration file.
            </summary>
            <param name="args">The command line arguments.</param>
            <returns>The instance of the console application.</returns>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationManager.RunApplication(System.String[])">
            <summary>
            Runs the console application.
            </summary>
            <param name="args">The command line arguments.</param>
        </member>
        <member name="M:AdaptiveConsole.ConsoleApplicationManager.RunApplication(AdaptiveConsole.Config.AdaptiveConsoleConfiguration,System.String[])">
            <summary>
            Runs the application.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:AdaptiveConsole.DesignModel.AttributeEventProvider">
            <summary>
            Represents the event model of the changing of the properties.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.DesignModel.AttributeEventProvider.propertyChanged">
            <summary>
            The delegate which represents the changing of the property.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.DesignModel.AttributeEventProvider.syncRoot">
            <summary>
            The synchronization reference.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.DesignModel.AttributeEventProvider.DoPropertyChanged(System.Object,AdaptiveConsole.DesignModel.PropertyChangedEventArgs)">
            <summary>
            The wrapper of the event process.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The parameter.</param>
        </member>
        <member name="M:AdaptiveConsole.DesignModel.AttributeEventProvider.NotifyPropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Notifies the changing of the property.
            </summary>
            <param name="propertyName">Name of the property to be changed.</param>
            <param name="oldValue">Old value of the property.</param>
            <param name="newValue">New value of the property.</param>
        </member>
        <member name="M:AdaptiveConsole.DesignModel.AttributeEventProvider.NotifyPropertyChanged">
            <summary>
            Notifies the changing of the property without any property value changes.
            </summary>
            <remarks>This method can be used for notifying the change of the property
            which doesn't carry any property value. For example, the add or remove of
            the item in a collection.</remarks>
        </member>
        <member name="E:AdaptiveConsole.DesignModel.AttributeEventProvider.PropertyChanged">
            <summary>
            Occurs when any property of the editor project is changed.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.DesignModel.PropertyChangedEventArgs">
            <summary>
            Represents event handler arguments that identify the changing
            of a property.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.DesignModel.PropertyChangedEventArgs.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.DesignModel.PropertyChangedEventArgs.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes the object with the given property information.
            </summary>
            <param name="property">The property information which is used to
            initialize the object.</param>
        </member>
        <member name="M:AdaptiveConsole.DesignModel.PropertyChangedEventArgs.#ctor(System.Reflection.PropertyInfo,System.Object,System.Object)">
            <summary>
            Initializes the object with the given property information, the old and new
            values of the property.
            </summary>
            <param name="property">The property information which is used to
            initialize the object.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:AdaptiveConsole.DesignModel.PropertyChangedEventArgs.Property">
            <summary>
            Gets or sets the information on the property which
            was just changed.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.DesignModel.PropertyChangedEventArgs.OldValue">
            <summary>
            Gets or sets the value of the property which was before
            the changing.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.DesignModel.PropertyChangedEventArgs.NewValue">
            <summary>
            Gets or sets the value of the property which was after
            the changing.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.InvalidContractException">
            <summary>
            The AdaptiveConsole exception which indicates that the option contract is invalid.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.InvalidContractException.#ctor(System.String)">
            <summary>
            Initializes the exception with the given message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:AdaptiveConsole.InvalidContractException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes the exception with the given message and its inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="M:AdaptiveConsole.InvalidContractException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes the exception with the formatting string and the parameters.
            </summary>
            <param name="format">The formatting string.</param>
            <param name="arguments">Parameters.</param>
        </member>
        <member name="T:AdaptiveConsole.InvalidOptionException">
            <summary>
            The AdaptiveConsole exception which indicates that the option is invalid.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.InvalidOptionException.#ctor(System.String)">
            <summary>
            Initializes the exception with the given message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:AdaptiveConsole.InvalidOptionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes the exception with the given message and its inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="M:AdaptiveConsole.InvalidOptionException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes the exception with the formatting string and the parameters.
            </summary>
            <param name="format">The formatting string.</param>
            <param name="arguments">Parameters.</param>
        </member>
        <member name="T:AdaptiveConsole.OptionType">
            <summary>
            Type of the option.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.OptionType.SingleValue">
            <summary>
            Indicates the option is a single value option.
            </summary>
            <example>
            Following examples are the single value options:
            
            /output:test.xml
            /type:classes
            /language:vb
            </example>
        </member>
        <member name="F:AdaptiveConsole.OptionType.ValueList">
            <summary>
            Indicates the option is a value list option. That means
            the option carries multiple values.
            </summary>
            <example>
            Following examples are the value list options:
            
            /input:a.xsd,b.xsd,c.xsd
            /include:stdio.h,stdlib.h
            /references:System.dll,System.Configuration.dll
            </example>
        </member>
        <member name="F:AdaptiveConsole.OptionType.Switch">
            <summary>
            Indicates the option is a switch.
            </summary>
            <example>
            Followings are the switches:
            
            /verbose
            /nologo
            /silent
            </example>
        </member>
        <member name="T:AdaptiveConsole.OptionAttribute">
            <summary>
            Represents the custom attribute that identifies an option.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionAttribute.Name">
            <summary>
            Gets or sets the name of the option.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionAttribute.Description">
            <summary>
            Gets or sets the description of the option. This description will be 
            used to generate help documentation.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionAttribute.Type">
            <summary>
            Gets or sets the type of the option. Default value is SingleValue.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionAttribute.Required">
            <summary>
            Gets or sets a System.Boolean value that indicates whether the option
            is required. Default value is True.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionAttribute.CaseSensitive">
            <summary>
            Gets or sets a System.Boolean value that indicates whether the option
            is case sensitive. Default value is False.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionAttribute.ValueSeparator">
            <summary>
            Gets or sets the separator character which will be used by the option
            with the type of ValueList.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionAttribute.Default">
            <summary>
            Gets or sets a value which is for providing the default value when
            the option is not required.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.ContractType">
            <summary>
            Type of the contract.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ContractType.Patternized">
            <summary>
            Indicates that the contract will match
            the optional command line argument.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ContractType.Exact">
            <summary>
            Indicates that the contract will match
            the exact command line argument.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ContractType.None">
            <summary>
            Indicates that the contract will match
            the command without any argument.
            </summary>
        </member>
        <member name="F:AdaptiveConsole.ContractType.Free">
            <summary>
            Indicates that the contract will match
            the command in which the arguments are
            all Parameter.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.OptionContractAttribute">
            <summary>
            Represents the custom attribute that identifies an option contract.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionContractAttribute.Type">
            <summary>
            Gets or sets the type of the contract. Default value is Patternized.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionContractAttribute.Argument">
            <summary>
            Gets or sets the argument of the contract. It must be specified when the
            type of the contract is Exact. It can be ignored when the
            type of the contract is not Exact.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionContractAttribute.CaseSensitive">
            <summary>
            Gets or sets a System.Boolean value that indicates whether the argument
            should be case sensitive.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionContractAttribute.Description">
            <summary>
            Gets or sets the description of the contract. This description will be
            used to generate the help documentation.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionContractAttribute.Parameters">
            <summary>
            Gets or sets an integral value that indicates the number of parameters
            within the option contract syntax.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.OptionContractBase">
            <summary>
            The base class for all the option contracts.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.OptionContractBase.Execute(AdaptiveConsole.ConsoleApplicationBase,System.Collections.Generic.IList{AdaptiveConsole.ArgumentInfo})">
            <summary>
            Executes the contract.
            </summary>
            <param name="consoleApplication">The console application instance on which the contract is executed.</param>
            <param name="args">The argument list carried with the argument information.</param>
        </member>
        <member name="M:AdaptiveConsole.OptionContractBase.DoExecute(AdaptiveConsole.ConsoleApplicationBase,System.Collections.Generic.IList{AdaptiveConsole.ArgumentInfo})">
            <summary>
            Executes the contract.
            </summary>
            <param name="consoleApplicationBase">The console application instance on which the contract is executed.</param>
            <param name="iList">The argument list carried with the argument information.</param>
        </member>
        <member name="P:AdaptiveConsole.OptionContractBase.Attribute">
            <summary>
            Gets the attribute instance of the contract.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionContractBase.OptionAttributes">
            <summary>
            Gets the attributes for all the options within the contract.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionContractBase.HelpText">
            <summary>
            Gets the help text of the contract.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionContractBase.Syntax">
            <summary>
            Gets the syntax description of the contract.
            </summary>
        </member>
        <member name="T:AdaptiveConsole.OptionContractInfo">
            <summary>
            Information carrier which contains the information about an option contract
            and its attribute.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.OptionContractInfo.#ctor">
            <summary>
            Initializes the information carrier with no parameter.
            </summary>
        </member>
        <member name="M:AdaptiveConsole.OptionContractInfo.#ctor(AdaptiveConsole.OptionContractBase,AdaptiveConsole.OptionContractAttribute)">
            <summary>
            Initializes the information carrier with option contract and its attribute.
            </summary>
            <param name="optionContract">Option contract.</param>
            <param name="contractAttribute">The attribute of the option contract.</param>
        </member>
        <member name="P:AdaptiveConsole.OptionContractInfo.OptionContract">
            <summary>
            Gets or sets the option contract.
            </summary>
        </member>
        <member name="P:AdaptiveConsole.OptionContractInfo.ContractAttribute">
            <summary>
            Gets or sets the attribute of the option contract.
            </summary>
        </member>
    </members>
</doc>
